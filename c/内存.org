
*  预备知识
一个由c/c++ 编译的程序占用的内存分为以下几个部分

** 栈区(stack)
由编译器自动分配释放，存放函数的参数值， 局部变量的值等。其操作方式类似数据结构中的栈。

** 堆区(heap)
一般有程序员分配释放，如果程序员不释放，在系统结束的时候可能有OS回收。注意它和数据结构中的
堆是两码事，分配方式类似于链表。


** 全局区(静态区)(static)
全局变量和静态变量的存储是放在一块的，初始化的全局变量和静态变量在一块区域，未初始化的全局变量
和未初始化的静态变量在相邻的另外一块区域。程序结束后由系统进行释放。

** 文字常量区
常量字符串就是放在这个区域，程序结束后由系统进行释放

** 程序代码区
存放函数体的二进制代码。

* size 命令查看linux 程序內存段

* 举例说明


* 动态分配释放内存
用malloc 动态分配内存后一定要判断是否分配成功,判断指针的值是否为NULL

内存分配成功后要对内存单元进行初始化

内存分配成功且初始化后使用时别越界了.
内存使用完后要用 free(p)进行释放, 注意, 释放后p的值是不会变的,仍然是一个地址值,
仍然指向那块内存区域,只是这块内存区域的值变为垃圾了. 为了防止后面继续使用这块内存,
应该在free(p)后, 立即p=NULL,这样后面要使用,判断p是否为NULL的时候就可以判断出来.

* c语言内存对齐
C99 规定 int, unsigned int 和 bool 可以作为位域类型,但是编译器几乎都对此做了扩展.允许其他类型存在。

* 参考
[[http://blog.csdn.net/youoran/article/details/10990815][ｃ语言内存分配]]






