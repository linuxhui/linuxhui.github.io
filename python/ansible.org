* 命令学习
** ansible
#+BEGIN_SRC python
  root@192.168.100.246:/root# ansible -h 
  Usage: ansible <host-pattern> [options]
#+END_SRC

ansible是指令核心部分，其主要用于执行ad-hoc命令，即单条命令。默认后面需要跟主机和选项部分，默认不指定模块时，使用的是command模块。如：
#+BEGIN_EXAMPLE

#+END_EXAMPLE
不过默认使用的模块是可以在ansible.cfg 中进行修改的。ansible命令下的参数部分解释如下
#+BEGIN_EXAMPLE
  参数：
    -a 'Arguments', --args='Arguments' 命令行参数
    -m NAME, --module-name=NAME 执行模块的名字，默认使用 command 模块，所以如果是只执行单一命令可以不用 -m参数
    -i PATH, --inventory=PATH 指定库存主机文件的路径,默认为/etc/ansible/hosts.
    -u Username， --user=Username 执行用户，使用这个远程用户名而不是当前用户
    -U --sud-user=SUDO_User  sudo到哪个用户，默认为 root
    -k --ask-pass  登录密码，提示输入SSH密码而不是假设基于密钥的验证
    -K --ask-sudo-pass 提示密码使用sudo
    -s --sudo sudo运行
    -S --su 用 su 命令
    -l  --list 显示所支持的所有模块
    -s --snippet 指定模块显示剧本片段
    -f  --forks=NUM 并行任务数。NUM被指定为一个整数,默认是5。 #ansible testhosts -a "/sbin/reboot" -f 10 重启testhosts组的所有机器，每次重启10台
    --private-key=PRIVATE_KEY_FILE 私钥路径，使用这个文件来验证连接
    -v --verbose 详细信息
    all  针对hosts 定义的所有主机执行
    -M MODULE_PATH, --module-path=MODULE_PATH 要执行的模块的路径，默认为/usr/share/ansible/
    --list-hosts 只打印有哪些主机会执行这个 playbook 文件，不是实际执行该 playbook 文件
    -o --one-line 压缩输出，摘要输出.尝试一切都在一行上输出。
    -t Directory, --tree=Directory 将内容保存在该输出目录,结果保存在一个文件中在每台主机上。
    -B 后台运行超时时间
    -P 调查后台程序时间
    -T Seconds, --timeout=Seconds 时间，单位秒s
    -P NUM, --poll=NUM 调查背景工作每隔数秒。需要- b
    -c Connection, --connection=Connection  连接类型使用。可能的选项是paramiko(SSH),SSH和地方。当地主要是用于crontab或启动。
    --tags=TAGS 只执行指定标签的任务    例子:ansible-playbook test.yml --tags=copy  只执行标签为copy的那个任务
    --list-hosts 只打印有哪些主机会执行这个 playbook 文件，不是实际执行该 playbook 文件
    --list-tasks 列出所有将被执行的任务
    -C, --check 只是测试一下会改变什么内容，不会真正去执行;相反,试图预测一些可能发生的变化
    --syntax-check 执行语法检查的剧本,但不执行它
    -l SUBSET, --limit=SUBSET 进一步限制所选主机/组模式  --limit=192.168.0.15 只对这个ip执行
    --skip-tags=SKIP_TAGS 只运行戏剧和任务不匹配这些值的标签  --skip-tags=copy_start
    -e EXTRA_VARS, --extra-vars=EXTRA_VARS  额外的变量设置为键=值或YAML / JSON
          #cat update.yml
          ---
          - hosts: {{ hosts }}
            remote_user: {{ user }}
          ..............
          #ansible-playbook update.yml --extra-vars "hosts=vipers user=admin"   传递{{hosts}}、{{user}}变量,hosts可以是 ip或组名
    -l,--limit 对指定的 主机/组 执行任务  --limit=192.168.0.10，192.168.0.11 或 -l 192.168.0.10，192.168.0.11 只对这个2个ip执行任务
#+END_EXAMPLE
** ansible-doc
该指令用于查看模块信息，常用参数有两个 -l 和 -s。具体如下
#+BEGIN_EXAMPLE
  //1. 列出所有已经安装的模块
  ansible -l
  //2. 查看具体某模块的用法，这个如查看 command模块
  ansible-doc -s command
#+END_EXAMPLE
** ansible-galaxy
ansible-galaxy 指令用于方便的从https://galaxy.ansible.com/ 站点下载第三方扩展模块，我们可以形象的理解其类似于centos下的yum、python下的pip或easy_install 

** ansible-lint
ansible-lint是对playbook的语法进行检查的一个工具。用法是ansible-lint playbook.yml 。

** ansible-playbook
该指令是使用最多的指令，其通过读取playbook 文件后，执行相应的动作，这个后面会做为一个重点来讲。

** ansible-pull
该指令使用需要谈到ansible的另一种模式－－－pull 模式，这和我们平常经常用的push模式刚好相反，其适用于以下场景：你有数量巨大的机器需要配置，即使使用非常高的线程还是要花费很多时间；你要在一个没有网络连接的机器上运行Anisble，比如在启动之后安装。这部分也会单独做一节来讲。

** ansible-vault
ansible-vault主要应用于配置文件中含有敏感信息，又不希望他能被人看到，vault可以帮你加密/解密这个配置文件，属高级用法。主要对于playbooks里比如涉及到配置密码或其他变量时，可以通过该指令加密，这样我们通过cat看到的会是一个密码串类的文件，编辑的时候需要输入事先设定的密码才能打开。这种playbook文件在执行时，需要加上 --ask-vault-pass参数，同样需要输入密码后才能正常执行。具体该部分可以参查官方博客。




* command 模块 
上面已经提到，ansbile自身已经自带了很多模块，可以通过ansible-doc -l 进行查看。这里就结合command、shell、raw、script模块了解下其用法。

上面四个模块都属于commands 类。

+ command模块
该模块通过-a跟上要执行的命令可以直接执行，不过命令里如果有带有如下字符部分则执行不成功 “ so variables like $HOME and operations like "<", ">", "|", and "&" will not work (use the shell module if you need these features).”；
shell 模块
用法其本和command一样，不过的是其是通过/bin/sh进行执行，所以shell 模块可以执行任何命令，就像在本机执行一样，“ It is almost exactly like the command module but runs the command through a shell (/bin/sh) on the remote node.”；
raw模块
用法和shell 模块一样 ，其也可以执行任意命令，就像在本机执行一样，“Executes a low-down and dirty SSH command, not going through the module subsystem. There is no change handler support for this module. This module does not require python on the remote system”
script模块
其是将管理端的shell 在被管理主机上执行，其原理是先将shell 复制到远程主机，再在远程主机上执行，原理类似于raw模块，“This module does not require python on the remote system, much like the raw module.” 。




2.1、Target section

定义将要执行playbook的远程主机组

Target section 常用参数：
   hosts：定义远程主机组

   user：执行该任务的用户

   sudo: 设置为yes的时候，执行任务的时候使用root权限

   sudo_user 如果你设置用户为tshare365，那么你执行的时候会使用tshare365用户的权限

   connection 通过什么方式连接到远程主机，默认是ssh

   gather_facks 是否启用在远程主机执行setup模块，默认是会执行的，可用同setup模块获取远程主机的信息，在定义变量的时候使用




2.2、Variable section

定义playbook运行时需要使用的变量
   vars  定义格式 变量名:变量值

   vars_files  指定变量文件

   vars_prompt  用户交互模式自定义变量

   setup 模块去远程主机的值

2.3、Task section

定义将要在远程主机上执行的任务列表
   name：输出到屏幕的信息

   action：定义执行的动作调用ansible的模块例如：yum name=http state=installed就是安装apache服务

   copy：复制本地文件到远程主机

   template：复制本地文件到远程主机但是他可以在本地文件中调用变量

   service ：定义服务的状态


2.4、Handler section

定义task执行完成以后需要调用的任务

